{
    "headline": "Five key lessons for every young game developer", 
    "text": "Today, a small British game studio named Angry Mango will launch its debut game onto the Windows Phone platform. Mush is a beautiful platformer with a brilliant emotional interface, allowing players to access the special powers of the lead character by drawing happy or sad expressions on the touchscreen. Last year, the game won the prestigious Dare To Be Digital competition and has earned glowing previews from throughout the gaming press. But it hasn&apos;t been easy. The small team of students has had to endure financial hardship and endless bug fixing to get the game onto the Windows gaming platform. And it will be just one of the thousands of smartphone titles hitting app stores today. So how should a young studio approach the development process? Here, Henry Hoffman and Ahmed Zaman from Angry Mango tells us what they&apos;ve learned from the last two years. Embrace university... and then your parents The Angry Mango team were all studying at the University of Wales, Newport, when they started work on Mush. Not only did this provide an environment of creativity and dedication, it also released them from the financial imperatives of the &apos;real world&apos;. &quot;Staying afloat has been tough,&quot; says Hoffman. &quot;Using our time at University for the first half of development was really essential, and when that came to an end, the noose tightened. We tried to continue full-time for a while, but in the end we had to get &apos;normal&apos; jobs to support working on Mush in our spare time. I was generally working nine to five for my day job, then six to twelve in the evenings for Angry Mango. &quot;My biggest piece of advice for newcomers is to maximise time at university, where you&apos;re comparatively free from financial restraints. It&apos;s only with reflection that I see how valuable that really was. Alternatively, setting aside time to focus on a project between stints of work will allow for a healthier balance. Getting funding is a great way to do this, and some of my close friends have been really successful in this area&quot;. Small studios can apply for funding from various bodies in the UK. The University of Abertay offers a grant to independent developers, while Tiga, the UK trade body for British game developers, has launched a funding contest. Several UK universities and science parks also run incubation projects for small high-tech businesses, providing cheap office space and fast broadband to successful applicants. Finally, the practical advice every ex-student dreads. &quot;Live with your parents while you can!&quot; says Hoffman. &quot;It might not be much fun, but it&apos;s often a lot cheaper. If you&apos;re head-down coding all day, it won&apos;t make much difference!&quot; Embrace the community Games development is more about community than competition, but the two can be combined. There are several national competitions for burgeoning studios, most notably, the University of Abertay&apos;s Dare to Be Digital, a nine-week residential game development programme, followed by prizes of 2500 for the three best titles. There are also dozens of game jams throughout the country every year, giving small teams the chance to developer their rapid prototyping skills while meeting like-minded people. &quot;Entering competitions is really important,&quot; says Hoffman. &quot;Dare to be Digital is a great student competition that catapulted us into the deep end, and it&apos;s really where our game began. Right from the outset we had mentors from Rockstar, Ruffian and Rare helping us with making tough decisions, and that&apos;s something you won&apos;t get anywhere else.&quot; There&apos;s an emerging rule of indie development: no game is created entirely in isolation. Game competitions as well as online forums, social networks and developer programmes have put the global community of developers in touch with each other allowing ad-hoc collaborations at every stage. &quot;From an early point at Dare to be Digital we found the Microsoft development community to be very helpful and supportive,&quot; says Hoffman. &quot;The great thing about a set of tools that have been around for a while is the huge collection of open source libraries that we were able to use in development. Utilising them enabled us to concentrate more on making the game, rather than reinventing the wheel&quot;. Embrace mobile Although the glamour of console development is attractive, dedicated gaming platforms are tough to develop for and attempting a 3D action adventure for your first title is likely to lead to ruin and frustration rather than Uncharted 4. &quot;Mobile games are a great place to start,&quot; argues Hoffman. &quot;They maybe don&apos;t have the glamour of console titles or the indie-cred of PC games, but the good ones focus on a simple concept done well. Simplicity is a lot easier to pull off when you&apos;re just starting out! Getting a game out there on mobile is a lot easier too, even if it&apos;s rough around the edges - the credibility that comes with having a published title is really invaluable&quot;. Embrace clean code Programming a game isn&apos;t just about hacking away, getting a single project on screen and working  it&apos;s about building a base for subsequent updates and maybe even sequels. That&apos;s how the commercial industry works these days. &quot;I must admit, we started off with very little experience programming full games,&quot; says Zaman. &quot;One of the key things that we have learnt is the importance of maintaining good, clean code. &apos;Good programming practice&apos; might seem unnecessary at first, but keeping the standards high really pays off in the long run. Especially further down the road, when you try to port, re-visit or rewrite code. &quot;I&apos;d also want to emphasise the need to write portable code. This is a concept that coders realise once they&apos;ve moved games from platform to platform, and really see the advantage later in the porting process. As there are so many mobile devices out there that use various combinations of hardware, software and tools, maintaining portable code becomes really important to allow for quick transferability between platforms - something that is vital for successful mobile games&quot;. Zaman advises young developers to test their code often and under as many platform scenarios as possible. &quot;The latest mobile phones have started to come with features like fast app switching and multitasking, so writing code that takes this into consideration is important. Sanitychecks are the easiest and cleanest way to save the game from crashing!&quot; Embrace a business expert &quot;Throughout this process, one of the things I&apos;ve learnt is that I&apos;m a much better games designer than I am a businessman,&quot; admits Hoffman. &quot;I actually enjoy the stress that comes with games development, the crunching, the compromises, the arguments  they all feel like part of a creative process. When it comes to business though, there&apos;s lots of drudgery, paperwork, forms you don&apos;t understand and managing finance. If you&apos;re trying to stay creative and sharp, the business side of things can really bog you down.  &quot;Another thing we&apos;ve found is that some institutions look to take advantage of you. Companies recognise that you&apos;re young and inexperienced and try to exploit that. We could have avoided a lot of these sorts of problems by getting someone on board with more business nous from the offset. Business-minded people can also save you money in the long run, with their better knowledge of funding avenues and alternative income streams. This has been one of our biggest lessons learnt, and something we&apos;re looking to rectify quickly&quot;. Again, universities can help here, with most providing business advice to students, often as part of incubation programmes. Developer bodies like Tiga may be useful, too. And remember, this is a community  there is always someone on Twitter, at a game jam or a games conference who knows what you&apos;re going through.      Mush is available now on Windows Phone.", 
    "section": "technology", 
    "gid": "technology/gamesblog/2012/jul/04/five-lessons-for-game-developers", 
    "wordcount": "1321"
}