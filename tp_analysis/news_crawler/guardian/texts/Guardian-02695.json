{
    "headline": "Young coders: the experts' view", 
    "text": "Kevin Fong: senior lecturer in physiology and TV presenter I remember the excitement of coding during the initial wave of PC technology  the Observer magazine would run weekly adverts for the ZX81, and there was a sense that coding was within reach. Since X-box, it&apos;s harder to see the route to how you would code one of those games yourself, and black box devices like palm pilots and latterly tablets take away that connection to your machine. Jeremy Clarkson described the VW Beetle as a car for people who didn&apos;t like cars: previously unless you could get under the bonnet and change the clutch you weren&apos;t a motorist. Apple did that for computer science  the subconscious statement is that it&apos;s cool to not know, to not tinker. The skill is being lost even as the appetite for it grows. Coders increasingly modify our world, the enormous bandwidth of information available to us, but the practice needs to be exciting enough, have more people doing it and sharing it for it to be mainstream. Computing teachers used to be enthusiasts themselves, but now there is more remove from that excitement. Machines like the BBC Micro were training grounds. Raspberry Pi is interesting attempt to return to that  but it&apos;s a start, not an end. Iain Dodsworth: founder of Tweetdeck     Iain Dodsworth.    A subset of kids will always learn these skills anyway, the boring, laborious way I did. It&apos;s the other 90% you need to engage. What&apos;s great is that they are already primed for it  it&apos;s a generational thing. My kids are five and nine and already coding, but they don&apos;t know it. Free programs like Kodu on X-box are brilliant. They&apos;re guiding a funny fish around a world they&apos;re creating, but they&apos;re also building variables: objects, methods, events. For slightly older kids, their sense of identity is fundamentally constructed online; it&apos;s a small step to taking control of the construction, building their own websites. The natural step after that is hacking together solutions to problems at work. Hacking has negative, Hollywood-influenced connotations, but is just makeshift, logical problem solving. If your job needs you to filter a lot of data looking for patterns it can take hours or days to go through an IT department, or you can put together your own simple, scrappy tool and get there quicker. It&apos;s not about being a high-end software engineer; I&apos;m not a great technical coder. We learn English and maths not for specific jobs but because they&apos;re life skills. Coding is a life skill too. Dallas Campbell: actor and presenter of Bang Goes the Theory on BBC1     Dallas Campbell.    I remember the five dusty BBC Micros in our school  some of us would goof off games and get on them, copying out lines of Basic from magazines. It was slavish but there was a sense of responsibility and creation, even if you were only working on getting the words &quot;Dallas Is Great&quot; to scroll up and down the screen. A gap has opened up since then. In science, as in everything else, it helps to understand how things works. There&apos;s an obvious economic incentive, but beyond that it actually adds value and wonder to our engagement with the world. Coding is a creative outlet. I saw some kids at one of Emma Mulqueeny&apos;s hack days and was blown away at their energy and creativity, that power to implement your own idea is incredibly cool. Arthur C Clarke said any sufficiently advanced technology is indistinguishable from magic. We live in an extraordinary age, but we&apos;ve outsourced all our activities to the digital. We&apos;re fluent in the uses of technology but not fluent in its creation, how the stuff actually gets on to the screen. It&apos;s so important to get under the bonnet of the modern world, or we disconnect ourselves. Policymakers and education specialists should respond to that gap. It&apos;s a question of visibility. Say coding and most people don&apos;t know what you&apos;re talking about; but what you&apos;re talking about is the language of the future.", 
    "section": "education", 
    "gid": "education/2012/apr/01/young-coders-experts-view", 
    "wordcount": "671"
}