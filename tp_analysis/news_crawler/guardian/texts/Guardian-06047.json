{
    "headline": "Windows 8, Surface and the post-PC world: avoiding Cobol 2022", 
    "text": "Remember that May 1995 memo that Bill Gates sent to every Microsoftie about the threat of the internet? The iPad is a bigger threat than that, and you can see Microsoft&apos;s chiefs thinks that too from their behaviour. However, all they had to do when they realised the internet was a big deal was scale back MSN and rejig their browser play. The iPad made them rebuild Windows. To understand this threat, don&apos;t think about the paltry money that tech makes  think about real, proper, big, old money. Imagine  and (stand down, lawyers) this is just an impossible fantasy  imagine that one day the board of Coca-Cola wakes up and discovers that any form of flavoured water has been found to be as lethal as tobacco. That&apos;s not just a bad day in Atlanta. That&apos;s a bad day for the world economy. That&apos;s what&apos;s happening to Microsoft. This isn&apos;t just &quot;oh, we&apos;re going to lose some sales  we feel a bit sad&quot;. This is total, utter, &quot;oh, it turns out we can&apos;t sell anything at all&quot;. If Windows fails, Office fails, then the server products fail because there&apos;s no money. The online offerings don&apos;t stop failing; but because there&apos;s no money, the tools fail because there&apos;s no adoption, nor for that matter, any money. Screwing up the transition from PC to post-PC will make RIM&apos;s current market position seem like winning the lottery every single day. Hence why Windows 8 is so  weird. It&apos;s not an incremental update, it&apos;s a pitch into the future of what the world of computing might look like in 2017 to 2022. (After all, Windows XP is still going strong 11 years after its launch; why shouldn&apos;t Windows 8?) That world won&apos;t be based on WIMP (Windows, Icons, Menus and Pointers), it&apos;ll be centred around touch and being mobile. The industry shift from WIMP to touch is the same as the shift from the minicomputer to the microcomputer. But this article isn&apos;t about what Microsoft is doing, it&apos;s about why on Earth we developers are just blithely ignoring this shift. .NET Back around the time that .NET was being introduced I built a website that was pretty popular. I sold advertising on it and managed to make enough money from it each month to cover the payments on a new and shiny Audi TT. And it was pretty nice one. Point is though, no matter how hard I worked that site it paid for the car, but it didn&apos;t pay for the mortgage, or holidays, or food, or clothes for the kids, or new computers, or washing machines when they broke. I personally feel that site was hugely successful, but I still needed a day job in order to actually do anything useful with my life. This thought was prompted, by the way, by yet another conversion with a Windows Phone dev saying that he wasn&apos;t going to do any Metro-style development because he hadn&apos;t got enough sales on on Windows Phone. This isn&apos;t the first time I&apos;ve heard this; it comes up again and again. There is a lot of reticence out there with the Metro style because of this perceived problem with money. Hey, let me tell you  this industry of ours isn&apos;t all about the Benjamins. We all need to be ignoring the money issue. You&apos;re probably not going to get paid enough to fund yourself full-time by developing mobile apps. (Remember: most consumer apps sink.) Change Certainly, most of you are not going to walk into the office today and find your boss standing next to a pile of money with which to encourage you to move all their ASP.NET applications to Metro-style, touch-centric apps. What you&apos;re really trying to do is time this so that you don&apos;t end up being 2022&apos;s equivalent of a Cobol programmer. And there are ways you can do that. For example, spend some time doing some Metro-style development out-of-hours so you&apos;ll understand touch better. You can then use that understanding to drive a programme of works to make your internal ASP.NET apps more touch-friendly. That&apos;s a step away from COBOL-2022, and actually can happen without too much heartache or controversial business plans. There&apos;s loads more examples like that where you can borrow new world thinking and apply it to current world projects. As developers we all know that we have to react and change. We have to be autodidacts, consuming blogs and tweets and building up our internal understanding of an external dynamic picture.  What&apos;s harmful is when we confuse this with fantasy about being able to reap some sort of direct commercial benefit from the app stores. Dismissing doing any work at all on these new platforms out of hand is flawed thinking. The value from &quot;playing with&quot; this new stuff isn&apos;t money. It&apos;s knowledge, and fun  and perhaps some recognition for a job well done either from building something people like that&apos;s sold, or building an open source framework that genuinely helps people of which there are loads of fantastic examples. And the story is no better over on the App Store side. A figure of $5bn (3.2bn) paid out for developers sounds huge. But it&apos;s not  Apple&apos;s App Store has been going for 47 months. That&apos;s just 66.5m per month. A commercial software venture needs a minimum of 500k to be both surviving and interesting. That means the App Store  the biggest game in town  can only support 1,596 software companies with 500k a year in revenues. And that&apos;s globally. It&apos;s too small a market to support you, regardless of how fantastic you are. And just how cool is Surface anyway? Look at this teaser video  it&apos;s like a bad-ass Microsoft from a future dystopian world came back in time to lay some smack down on the guys from Cupertino.             (And it&apos;s fascinating to compare it, as the Seattle Times does, with past Microsoft ads, and the latest iPad one.) Are you honestly telling me that you don&apos;t want one of those? Because if you write software for it in your spare time, busting out the credit card for that bad boy is eminently explainable to even the hardest hearted financial controller and/or spouse. (Mind you, that&apos;s where I was with my Lumia, and look how that panned out.) Conclusion Post-PC is the biggest thing that&apos;s going to happen for the next 10-12 years. Microsoft (can we say Steve Sinofsky? Of course we can) has done a great job with Windows 8 in lining up the whole platform to survive a shift to post-PC. (Of course, their mileage may vary.) Sinofsky would not have laid waste to Windows 3.11 through Windows 7 unless this was a big deal and the writing on the wall was very, very obvious. It doesn&apos;t matter how good you are  you are not (on average, lightning strikes excepted) going to make money out of mobile anywhere. Don&apos;t start getting into Metro for that. Make a change because learning new stuff is fun, and you might get some recognition out of something cool. More than that, do it so that you&apos;re not spending 2022 hacking around in tomorrow&apos;s COBOL. Web apps and desktop WIMP stuff will not remain sexy or relevant for much longer. It doesn&apos;t matter whether you choose to align yourself with iOS, Cocoa Touch, and Xcode, or whether you align yourself with Windows, Metro-style, and Visual Studio, although I know which I&apos;d pick. Just do something. Carpe diem, and all that.  Matthew Baxter-Reynolds is an independent software development consultant, trainer and author based in the UK. His favourite way to communicate with like-minded technical people is Twitter: @mbrit.", 
    "section": "technology", 
    "gid": "technology/blog/2012/jun/20/windows-8-surface-post-pc-cobol", 
    "wordcount": "1290"
}