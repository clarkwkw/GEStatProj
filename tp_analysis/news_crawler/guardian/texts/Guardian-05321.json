{
    "headline": "How I built my first app (with a little help)", 
    "text": "On the one hand, there are those who think computer coders are the geekiest nerds around. The kind of people  no, let&apos;s not beat about the bush here  the kind of men whose lack of personal skills and inability to get a girlfriend simply means that they have too much time on their hands because they&apos;re not having sex. Then there are the people like me who think it would be quite cool to hack into the CIA&apos;s mainframe. Would I like to learn how to write code in a day? Well, of course I would. I&apos;m from the pre-Google era and consider computer code to be some sort of magic faerie spell sent from the Gods above. Who wouldn&apos;t want to know how to write magic faerie spells in a day? Decoded, a new London-based company that has set up the course, puts it slightly differently: it claims I&apos;ll be able to build a multifunction geo-location app in a day. But it&apos;s still a pretty bold statement, particularly given, how shall we say, certain technical challenges. Still, it&apos;s a pretty slick set-up. I show up at 9.30am at the appointed location, just off Silicon Roundabout, the heart of Britain&apos;s small but plucky tech industry, in the kind of super-cool warehouse flat that a middle-aged man, post-divorce, might buy, and meet the Decoded team and a group of nine other budding web developers. Only they&apos;re not. In the opening session, we lounge around on tasteful, designer sofas and introduce ourselves. There&apos;s a brace of CEOs who want to get teched up, a smattering of ad men looking slightly concerned about what the future might bring, but by far the greatest proportion of participants are actually from the tech industry. People who commission web content or lead interactive teams but who are about as au fait with code as they are with Klingon. But then, they&apos;re exactly the people that Decoded is targeting. They&apos;re a team of four, mostly ex-advertising, who spotted the great flaw at the heart of the digital economy: namely, that the people with power don&apos;t have much of a clue what the people with the technical expertise are actually on about. In the beating heart of tech UK, it becomes abundantly clear that it&apos;s perfectly possibly to talk the talk, or to have a high-flying job with a leading multimedia company, without any technical knowledge at all. &quot;And that&apos;s a pity,&quot; says Alasdair Blackwell, Decoded&apos;s resident code guru. &quot;Because they&apos;re missing out on half the creative process.&quot; Like many of the best web developers, Blackwell is self-taught. As a student, he took a play to the Edinburgh fringe, was asked to update the production&apos;s website, bought himself a teach yourself book and never looked back. Blackwell believes that everyone should know about code. &quot;We deal with computers almost every single waking hour of our lives. They&apos;re everywhere in the western world. And yet only a tiny proportion of people know anything about the language that&apos;s at the heart of them.&quot; What seems extraordinary, given the growing importance to the economy, and the grand political statements made about the tech economy, is that it&apos;s simply not taught in schools. But as Decoded has discovered, the demand is there: its courses are fully booked, Downing Street has asked for its advice, and when it went into a local school recently, 160 pupils applied to take part. But can we really learn the basics in a day? It seems unlikely, particularly given that the major part of the morning is spent lounging around trying to look cool while listening to Blackwell and Richard Peters, a fellow director, summarise the history of the internet and the role that computer code has played in its development. It&apos;s all things that I vaguely know  Tim Berners-Lee and HTML and the open source movement. But there&apos;s also lots that I don&apos;t  the origins of Javascript right up to the API revolution of recent times, which has seen companies such as Facebook open up their code to all-comers. Nor have I heard it framed so succinctly as a contextual narrative before. It&apos;s so interesting, I could lounge and listen all day. Then it&apos;s lunch, a rather classy home-made flatbreads-and-interesting-salads affair, and I&apos;m starting to think that really, if this is what coding involves, I don&apos;t know why I didn&apos;t do it sooner when, dammit, Alasdair makes us sit down at a computer. We&apos;re going to build a geo-location app, ie one that uses a phone&apos;s GPS to deliver a message when a user arrives at a location. And to do this, we have to code in three languages simultaneously: HTML, CSS and JavaScript. HTML serves the browser content, CSS controls what it looks like and JavaScript tells it how to behave. Oh, yes, easy. Alasdair shows us how to write the code for our headline and how to paste a photo, how to spin it around, and have the title fade into view, and then, lo! I open up a browser and it really is quite unbelievably bad: the font is terrible, the background amateurish, the layout a joke. The only comfort is that the one created by my fellow student Paul Bainsfair, the director general of the IPA, advertising&apos;s professional body, who&apos;s sitting next to me, is possibly even more cruddy. &quot;Christ,&quot; he says. &quot;Look at that. It&apos;s like it&apos;s 1994 all over again.&quot; I like his welcome message, though: &quot;Hi. Welcome to the site. Its purpose is to befuddle the reader with mindless corporate psychobabble.&quot; Alasdair gives us some more code and I manage to align my photo somewhere near the centre of the page. Then he gives the game away. Every bit of code you&apos;ll ever need has already been written. &quot;You just have to work out where to nick it from?&quot; I say. &quot;Actually, we don&apos;t use the word &apos;nick&apos;,&quot; says Richard. &quot;We use the word &apos;match&apos;.&quot; Yes, it&apos;s really very different. You just have to work out where to &quot;match&quot; it from and owing to the work of a super-nice man called John Resig, who spent seven years writing a code encyclopaedia called jQuery, this really isn&apos;t all that difficult. In fact, if you have a keenly logical mind, and a high level of attention to detail, none of it is that difficult. I have neither and I get brain ache. By the time Alasdair has got us &quot;matching&quot; a piece of cutting-edge code from the Boston Globe&apos;s website, I&apos;m close to a nervous collapse. It&apos;s the most intensive learning experience I&apos;ve had in a decade, and while I feel like I&apos;ve just sat finals, I&apos;m also strangely euphoric: I have built an app! What&apos;s more, Alasdair claims that the single line of code we&apos;ve cut and pasted from the Boston Globe&apos;s site, which automatically resizes our website according to the size of the page, is so bleeding edge that my site is actually more technologically actually more advanced than the Observer&apos;s. Really?  &quot;It&apos;s literally only existed for a couple of weeks,&quot; he says. What can I say? I have been inside the magic kingdom of code, if only for a day, and the magic faerie spells make just a tiny bit more sense. Though the CIA mainframe may take a short while longer.", 
    "section": "technology", 
    "gid": "technology/2012/mar/04/learn-programming-software-app-java", 
    "wordcount": "1239"
}